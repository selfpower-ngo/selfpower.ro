# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2.1
jobs:
  run-tests:
    parameters:
      django-version:
        type: string
    docker:
      - image: circleci/python:3.6.8
        environment:
          PIPENV_VENV_IN_PROJECT: false
          DATABASE_URL: postgresql://root@localhost/circle_test?sslmode=disable
          # This is for test
          # Do not place secrets or API Keys here, cause we're in git
          DJANGO_SETTINGS_MODULE: SelfpowerProject.settings.circleci
          # this is also because of the way we import base.* (we should not *)
          EMAIL_HOST_PASSWORD: something
          EMAIL_HOST_USER: something
          DJANGO: << parameters.django-version >>

      - image: circleci/postgres:10.10
        environment:
          POSTGRES_USER: circleci
          POSTGRES_DB: circle_test

    working_directory: ~/repo

    steps:
      - checkout
      - run: sudo chown -R circleci:circleci /usr/local/bin
      - run: sudo chown -R circleci:circleci /usr/local/lib/python3.6/site-packages
      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements/test.txt" }}-{{ checksum "requirements/base.txt" }}-<< parameters.django-version >>
            # fallback to using the latest cache if no exact match is found
            # this is not good when using matrix build:
            - v1-dependencies-<< parameters.django-version >>
      - run:
          name: prepare dependencies
          command: |
            python3.6 -m venv venv
            . venv/bin/activate
            pip install -U pip wheel setuptools
            echo ${DJANGO}
            sed -i '/^Django==/d' requirements/base.txt
            echo "We will cat the requirements/base.txt:"
            cat requirements/base.txt
      - run:
          name: install dependencies
          command: |
            . venv/bin/activate
            pip install -r requirements/test.txt
            echo ${DJANGO}
            pip install django~=${DJANGO}
            echo "Show current django:"
            python src/manage.py --version
      - run:
          # this can be removed
          name: Locate site Packages
          command: python -c "import site; print(site.getsitepackages())"
      - save_cache:
          paths:
            - "./venv"
            - "/usr/local/bin"
            - "/usr/local/lib/python3.6/site-packages"
          key: v1-dependencies-{{ checksum "requirements/test.txt" }}-{{ checksum "requirements/base.txt" }}-<< parameters.django-version >>

      - run: mkdir test-results
      - run:
          name: Run Tests & Coverage & CodeCov
          command: |
            . venv/bin/activate
            python src/manage.py collectstatic
            python src/manage.py migrate
            python src/manage.py test src/
            which coverage
            coverage erase
            coverage run src/manage.py test src/
            coverage report
            coverage xml -o test-results/coverage.xml
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-results
      - run:
          name: Upload CodeCov
          command: |
            bash <(curl -s https://codecov.io/bash)
workflows:
  version: 2
  build_using_workflows:
    jobs:
      - run-tests:
          name: build-django2
          django-version: 2.2.0
      - run-tests:
          name: build-django3
          django-version: 3.2.0
